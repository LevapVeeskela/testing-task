{"version":3,"file":"static/js/326.72ebeb36.chunk.js","mappings":"+NACA,EAAwB,qBAAxB,EAAqD,qBAArD,EAAoF,uBAApF,EAAmH,qB,SCqDnH,EA/CwB,SAACA,GACxB,IACCC,EASGD,EATHC,MACAC,EAQGF,EARHE,WACAC,EAOGH,EAPHG,aACAC,EAMGJ,EANHI,KACAC,EAKGL,EALHK,KACAC,EAIGN,EAJHM,YACAC,EAGGP,EAHHO,WACAC,EAEGR,EAFHQ,SACAC,EACGT,EADHS,QAED,GAA0BC,EAAAA,EAAAA,UAASV,EAAMW,OAAzC,eAAOA,EAAP,KAAcC,EAAd,KACQC,GAAMC,EAAAA,EAAAA,KAAND,EAWR,OACC,2BACEZ,IACA,mBAAOc,QAASV,EAAMW,UAAWC,IAAGf,EAAYgB,GAAhD,UACEjB,EADF,QAID,kBACCkB,GAAId,EACJF,aAAcA,EACdC,KAAMA,EACNC,KAAMA,EACNC,YAAaA,EACbU,UAAWC,IAAGV,EAAYW,EAAaP,EAAQO,EAAgB,IAC/DV,SAAUA,EACVC,QAASA,EACTW,SA1BmB,SAACC,GACtBT,EAAS,IACLH,IAAY,IAAIa,OAAOb,GAASc,KAAKF,EAAMG,OAAOC,QACrDb,EAASC,EAAE,2BAEPL,GAAyC,oBAAtBa,EAAMG,OAAOC,OAA+C,IAAtBJ,EAAMG,OAAOC,QAC1Eb,EAASC,EAAE,wBAEZ,IAoBEF,IAAS,gBAAKK,UAAWC,IAAGC,GAAnB,SAAkCP,MAG9C,EC7CD,EAF6B,SAACX,GAAD,OAAyB,SAAC,GAAD,UAAUA,GAAnC,ECJ7B,EAA4B,yBAA5B,EAA4D,oBAA5D,EAAyF,sB,SCiDzF,GAzC6B0B,EAAAA,EAAAA,KAAS,SAAC1B,GACtC,IAAQ2B,GAAgBC,EAAAA,EAAAA,KAAhBD,YACAE,EAAW7B,EAAX6B,OACAhB,GAAMC,EAAAA,EAAAA,KAAND,EACFiB,GAAUC,EAAAA,EAAAA,QAAO,MAevB,OAAa,OAANF,QAAM,IAANA,GAAAA,EAAQG,QACd,kBAAMC,SAfc,SAACC,GACrBA,EAAEC,iBACFC,QAAQC,IAAIH,EAAEI,cAAF,WAA8Bb,OAC1CW,QAAQC,IAAIH,EAAEI,cAAF,YAA+Bb,OAC3C,IAAMc,EAAS,CAAEC,UAAWN,EAAEI,cAAF,WAA8Bb,MAAOgB,WAAYP,EAAEI,cAAF,YAA+Bb,OAC5GE,EAAYe,UAAS,EAAM7B,EAAE,eAAgB0B,GAO7C,EAG8BI,IAAKb,EAASd,UAAWC,IAAGC,GAA1D,UACEW,EAAOe,KAAI,gBAAGvC,EAAH,EAAGA,KAAMD,EAAT,EAASA,KAAMD,EAAf,EAAeA,aAAcK,EAA7B,EAA6BA,SAAUC,EAAvC,EAAuCA,QAAvC,OACX,0BACC,SAAC,EAAD,CACCR,MAAOY,EAAE,eAAD,OAAgBR,EAAhB,UAA8B,IACtCF,aAAcA,EACdC,KAAMA,EACNC,KAAMA,EACNC,YAAaO,EAAE,eAAD,OAAgBR,EAAhB,gBAAoC,IAClDI,QAASA,EACTD,SAAUA,KARFH,EADC,KAaZ,kBAAOD,KAAK,SAASqB,MAAOZ,EAAE,qBAAsB,IAAKG,UAAWC,IAAGC,QAGxEL,EAAE,gCAEH,IC/BD,GAVsBa,EAAAA,EAAAA,KAAS,WAC9B,IAAQmB,GAAcjB,EAAAA,EAAAA,KAAdiB,UAER,OACC,gBAAK7B,UAAWC,IAAGC,GAAnB,UACC,SAAC,EAAD,CAAMW,OAAQgB,EAAUhB,UAG1B,G","sources":["webpack://testing-task/./src/shared/components/input/style.module.scss?30d5","shared/components/input/view.tsx","shared/components/input/index.tsx","webpack://testing-task/./src/pages/testing-task/form/style.module.scss?b95f","pages/testing-task/form/view.tsx","pages/testing-task/form/index.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"label\":\"style_label__kK2Vq\",\"input\":\"style_input__BfNfU\",\"invalid\":\"style_invalid__14X+4\",\"error\":\"style_error__jSzAL\"};","import React, { FC, useState } from 'react';\r\nimport cx from 'classnames';\r\n\r\nimport style from './style.module.scss';\r\nimport { Input } from './interface';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst View: FC<Input> = (props): JSX.Element => {\r\n\tconst {\r\n\t\tlabel,\r\n\t\tlabelClass,\r\n\t\tdefaultValue,\r\n\t\ttype,\r\n\t\tname,\r\n\t\tplaceholder,\r\n\t\tinputClass,\r\n\t\trequired,\r\n\t\tpattern,\r\n\t} = props;\r\n\tconst [error, setError] = useState(props.error);\r\n\tconst { t } = useTranslation();\r\n\tconst changeHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetError('');\r\n\t\tif (pattern && !new RegExp(pattern).test(event.target.value)) {\r\n\t\t\tsetError(t('FORM.ERRORS.INCORRECT'));\r\n\t\t}\r\n\t\tif ((required && typeof event.target.value == 'undefined') || event.target.value == '') {\r\n\t\t\tsetError(t('FORM.ERRORS.REQUIRED'));\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{label && (\r\n\t\t\t\t<label htmlFor={name} className={cx(labelClass, style.label)}>\r\n\t\t\t\t\t{label}:\r\n\t\t\t\t</label>\r\n\t\t\t)}\r\n\t\t\t<input\r\n\t\t\t\tid={name}\r\n\t\t\t\tdefaultValue={defaultValue}\r\n\t\t\t\ttype={type}\r\n\t\t\t\tname={name}\r\n\t\t\t\tplaceholder={placeholder}\r\n\t\t\t\tclassName={cx(inputClass, style.input, error ? style.invalid : '')}\r\n\t\t\t\trequired={required}\r\n\t\t\t\tpattern={pattern}\r\n\t\t\t\tonChange={changeHandler}\r\n\t\t\t/>\r\n\t\t\t{error && <div className={cx(style.error)}>{error}</div>}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default View;\r\n","import React, { FC } from 'react';\r\nimport { Input } from './interface';\r\n\r\nimport View from './view';\r\n\r\nconst Container: FC<Input> = (props): JSX.Element => (<View {...props} />);\r\n\r\nexport default Container;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"style_container__jYCas\",\"form\":\"style_form__PpCmV\",\"button\":\"style_button__YwCzJ\"};","import React, { FC, useRef, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport cx from 'classnames';\nimport Input from '../../../shared/components/input';\nimport { Field, FormCustom } from '../../../core/models/form';\nimport style from './style.module.scss';\nimport { observer } from 'mobx-react-lite';\nimport { useStores } from '../../../core/hooks/stores';\n\nconst View: FC<FormCustom> = observer((props) => {\n\tconst { commonStore } = useStores();\n\tconst { fields } = props;\n\tconst { t } = useTranslation();\n\tconst formRef = useRef(null);\n\tconst handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n\t\te.preventDefault();\n\t\tconsole.log(e.currentTarget['FIRST_NAME'].value);\n\t\tconsole.log(e.currentTarget['SECOND_NAME'].value);\n\t\tconst values = { firstName: e.currentTarget['FIRST_NAME'].value, secondName: e.currentTarget['SECOND_NAME'].value }\n\t\tcommonStore.setModal(true, t('MODAL.WELCOM', values));\n\t\t// if (formRef.current && formRef.current['FIRST_NAME']) {\n\t\t// \t(formRef.current['FIRST_NAME'] as HTMLInputElement).value = 'wwww eeee';\n\t\t// }\n\t\t// if (formRef.current && formRef.current['SECOND_NAME']) {\n\t\t// \t(formRef.current['SECOND_NAME'] as HTMLInputElement).value = 'qqqqq';\n\t\t// }\n\t};\n\n\treturn fields?.length ? (\n\t\t<form onSubmit={handleSubmit} ref={formRef} className={cx(style.form)}>\n\t\t\t{fields.map(({ name, type, defaultValue, required, pattern }: Field) => (\n\t\t\t\t<div key={name}>\n\t\t\t\t\t<Input\n\t\t\t\t\t\tlabel={t(`FORM.FIELDS.${name}.LABEL`, '')}\n\t\t\t\t\t\tdefaultValue={defaultValue}\n\t\t\t\t\t\ttype={type}\n\t\t\t\t\t\tname={name}\n\t\t\t\t\t\tplaceholder={t(`FORM.FIELDS.${name}.PLACEHOLDER`, '')}\n\t\t\t\t\t\tpattern={pattern}\n\t\t\t\t\t\trequired={required}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t))}\n\t\t\t<input type=\"submit\" value={t('FORM.BUTTONS.READY', '')} className={cx(style.button)} />\n\t\t</form>\n\t) : (\n\t\tt('FORM.ERRORS.SECOND_NAME.LABEL')\n\t);\n});\n\nexport default View;\n","import React, { FC } from 'react';\nimport { observer } from 'mobx-react-lite';\nimport cx from 'classnames';\nimport View from './view';\nimport style from './style.module.scss';\nimport { useStores } from '../../../core/hooks/stores';\n\nconst Container: FC = observer((): JSX.Element => {\n\tconst { formStore } = useStores();\n\n\treturn (\n\t\t<div className={cx(style.container)}>\n\t\t\t<View fields={formStore.fields} />\n\t\t</div>\n\t);\n});\n\nexport default Container;\n"],"names":["props","label","labelClass","defaultValue","type","name","placeholder","inputClass","required","pattern","useState","error","setError","t","useTranslation","htmlFor","className","cx","style","id","onChange","event","RegExp","test","target","value","observer","commonStore","useStores","fields","formRef","useRef","length","onSubmit","e","preventDefault","console","log","currentTarget","values","firstName","secondName","setModal","ref","map","formStore"],"sourceRoot":""}