{"version":3,"file":"static/js/326.cc7c34b1.chunk.js","mappings":"uNACA,EAAwB,qBAAxB,EAAqD,qBAArD,EAAoF,uBAApF,EAAmH,qB,SCqDnH,EA/CwB,SAACA,GACxB,IACCC,EASGD,EATHC,MACAC,EAQGF,EARHE,WACAC,EAOGH,EAPHG,aACAC,EAMGJ,EANHI,KACAC,EAKGL,EALHK,KACAC,EAIGN,EAJHM,YACAC,EAGGP,EAHHO,WACAC,EAEGR,EAFHQ,SACAC,EACGT,EADHS,QAED,GAA0BC,EAAAA,EAAAA,UAASV,EAAMW,OAAzC,eAAOA,EAAP,KAAcC,EAAd,KACQC,GAAMC,EAAAA,EAAAA,KAAND,EAWR,OACC,2BACEZ,IACA,mBAAOc,QAASV,EAAMW,UAAWC,IAAGf,EAAYgB,GAAhD,UACEjB,EADF,QAID,kBACCkB,GAAId,EACJF,aAAcA,EACdC,KAAMA,EACNC,KAAMA,EACNC,YAAaA,EACbU,UAAWC,IAAGV,EAAYW,EAAaP,EAAQO,EAAgB,IAC/DV,SAAUA,EACVC,QAASA,EACTW,SA1BmB,SAACC,GACtBT,EAAS,IACLH,IAAY,IAAIa,OAAOb,GAASc,KAAKF,EAAMG,OAAOC,QACrDb,EAASC,EAAE,2BAEPL,GAAyC,oBAAtBa,EAAMG,OAAOC,OAA+C,IAAtBJ,EAAMG,OAAOC,QAC1Eb,EAASC,EAAE,wBAEZ,IAoBEF,IAAS,gBAAKK,UAAWC,IAAGC,GAAnB,SAAkCP,MAG9C,EC7CD,EAF6B,SAACX,GAAD,OAAyB,SAAC,GAAD,UAAUA,GAAnC,ECJ7B,EAA4B,yBAA5B,EAA4D,oBAA5D,EAAyF,sBC4CzF,EAtC6B,SAACA,GAC7B,IAAQ0B,EAAW1B,EAAX0B,OACAb,GAAMC,EAAAA,EAAAA,KAAND,EACFc,GAAUC,EAAAA,EAAAA,QAAO,MAavB,OAAa,OAANF,QAAM,IAANA,GAAAA,EAAQG,QACd,kBAAMC,SAbc,SAACC,GACrBA,EAAEC,iBACFC,QAAQC,IAAIH,EAAEI,cAAF,WAA8BV,OAC1CQ,QAAQC,IAAIH,EAAEI,cAAF,YAA+BV,MAO3C,EAG8BW,IAAKT,EAASX,UAAWC,IAAGC,GAA1D,UACEQ,EAAOW,KAAI,gBAAGhC,EAAH,EAAGA,KAAMD,EAAT,EAASA,KAAMD,EAAf,EAAeA,aAAcK,EAA7B,EAA6BA,SAAUC,EAAvC,EAAuCA,QAAvC,OACX,0BACC,SAAC,EAAD,CACCR,MAAOY,EAAE,eAAD,OAAgBR,EAAhB,UAA8B,IACtCF,aAAcA,EACdC,KAAMA,EACNC,KAAMA,EACNC,YAAaO,EAAE,eAAD,OAAgBR,EAAhB,gBAAoC,IAClDI,QAASA,EACTD,SAAUA,KARFH,EADC,KAaZ,kBAAOD,KAAK,SAASqB,MAAOZ,EAAE,qBAAsB,IAAKG,UAAWC,IAAGC,QAGxEL,EAAE,gCAEH,ECrCKa,EAAkB,CACvB,CACCtB,KAAM,OACNC,KAAM,aACNG,UAAU,GAEX,CACCJ,KAAM,OACNC,KAAM,cACNG,UAAU,IAUZ,EANsB,kBACrB,gBAAKQ,UAAWC,IAAGC,GAAnB,UACC,SAAC,EAAD,CAAMQ,OAAQA,KAFM,C","sources":["webpack://testing-task/./src/shared/components/input/style.module.scss?30d5","shared/components/input/view.tsx","shared/components/input/index.tsx","webpack://testing-task/./src/pages/testing-task/form/style.module.scss?b95f","pages/testing-task/form/view.tsx","pages/testing-task/form/index.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"label\":\"style_label__kK2Vq\",\"input\":\"style_input__BfNfU\",\"invalid\":\"style_invalid__14X+4\",\"error\":\"style_error__jSzAL\"};","import React, { FC, useState } from 'react';\r\nimport cx from 'classnames';\r\n\r\nimport style from './style.module.scss';\r\nimport { Input } from './interface';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst View: FC<Input> = (props): JSX.Element => {\r\n\tconst {\r\n\t\tlabel,\r\n\t\tlabelClass,\r\n\t\tdefaultValue,\r\n\t\ttype,\r\n\t\tname,\r\n\t\tplaceholder,\r\n\t\tinputClass,\r\n\t\trequired,\r\n\t\tpattern,\r\n\t} = props;\r\n\tconst [error, setError] = useState(props.error);\r\n\tconst { t } = useTranslation();\r\n\tconst changeHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetError('');\r\n\t\tif (pattern && !new RegExp(pattern).test(event.target.value)) {\r\n\t\t\tsetError(t('FORM.ERRORS.INCORRECT'));\r\n\t\t}\r\n\t\tif ((required && typeof event.target.value == 'undefined') || event.target.value == '') {\r\n\t\t\tsetError(t('FORM.ERRORS.REQUIRED'));\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{label && (\r\n\t\t\t\t<label htmlFor={name} className={cx(labelClass, style.label)}>\r\n\t\t\t\t\t{label}:\r\n\t\t\t\t</label>\r\n\t\t\t)}\r\n\t\t\t<input\r\n\t\t\t\tid={name}\r\n\t\t\t\tdefaultValue={defaultValue}\r\n\t\t\t\ttype={type}\r\n\t\t\t\tname={name}\r\n\t\t\t\tplaceholder={placeholder}\r\n\t\t\t\tclassName={cx(inputClass, style.input, error ? style.invalid : '')}\r\n\t\t\t\trequired={required}\r\n\t\t\t\tpattern={pattern}\r\n\t\t\t\tonChange={changeHandler}\r\n\t\t\t/>\r\n\t\t\t{error && <div className={cx(style.error)}>{error}</div>}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default View;\r\n","import React, { FC } from 'react';\r\nimport { Input } from './interface';\r\n\r\nimport View from './view';\r\n\r\nconst Container: FC<Input> = (props): JSX.Element => (<View {...props} />);\r\n\r\nexport default Container;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"style_container__jYCas\",\"form\":\"style_form__PpCmV\",\"button\":\"style_button__YwCzJ\"};","import React, { FC, useRef, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport cx from 'classnames';\r\nimport Input from '../../../shared/components/input';\r\nimport { Field, FormCustom } from './interface';\r\nimport style from './style.module.scss';\r\n\r\nconst View: FC<FormCustom> = (props) => {\r\n\tconst { fields } = props;\r\n\tconst { t } = useTranslation();\r\n\tconst formRef = useRef(null);\r\n\tconst handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n\t\te.preventDefault();\r\n\t\tconsole.log(e.currentTarget['FIRST_NAME'].value);\r\n\t\tconsole.log(e.currentTarget['SECOND_NAME'].value);\r\n\t\t// if (formRef.current && formRef.current['FIRST_NAME']) {\r\n\t\t// \t(formRef.current['FIRST_NAME'] as HTMLInputElement).value = 'wwww eeee';\r\n\t\t// }\r\n\t\t// if (formRef.current && formRef.current['SECOND_NAME']) {\r\n\t\t// \t(formRef.current['SECOND_NAME'] as HTMLInputElement).value = 'qqqqq';\r\n\t\t// }\r\n\t};\r\n\r\n\treturn fields?.length ? (\r\n\t\t<form onSubmit={handleSubmit} ref={formRef} className={cx(style.form)}>\r\n\t\t\t{fields.map(({ name, type, defaultValue, required, pattern }: Field) => (\r\n\t\t\t\t<div key={name}>\r\n\t\t\t\t\t<Input\r\n\t\t\t\t\t\tlabel={t(`FORM.FIELDS.${name}.LABEL`, '')}\r\n\t\t\t\t\t\tdefaultValue={defaultValue}\r\n\t\t\t\t\t\ttype={type}\r\n\t\t\t\t\t\tname={name}\r\n\t\t\t\t\t\tplaceholder={t(`FORM.FIELDS.${name}.PLACEHOLDER`, '')}\r\n\t\t\t\t\t\tpattern={pattern}\r\n\t\t\t\t\t\trequired={required}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t))}\r\n\t\t\t<input type=\"submit\" value={t('FORM.BUTTONS.READY', '')} className={cx(style.button)} />\r\n\t\t</form>\r\n\t) : (\r\n\t\tt('FORM.ERRORS.SECOND_NAME.LABEL')\r\n\t);\r\n};\r\n\r\nexport default View;\r\n","import React, { FC } from 'react';\r\nimport cx from 'classnames';\r\nimport { Field } from './interface';\r\nimport View from './view';\r\nimport style from './style.module.scss';\r\n\r\nconst fields: Field[] = [\r\n\t{\r\n\t\ttype: 'text',\r\n\t\tname: 'FIRST_NAME',\r\n\t\trequired: true,\r\n\t},\r\n\t{\r\n\t\ttype: 'text',\r\n\t\tname: 'SECOND_NAME',\r\n\t\trequired: true,\r\n\t},\r\n];\r\n\r\nconst Container: FC = () => (\r\n\t<div className={cx(style.container)}>\r\n\t\t<View fields={fields} />\r\n\t</div>\r\n);\r\n\r\nexport default Container;\r\n"],"names":["props","label","labelClass","defaultValue","type","name","placeholder","inputClass","required","pattern","useState","error","setError","t","useTranslation","htmlFor","className","cx","style","id","onChange","event","RegExp","test","target","value","fields","formRef","useRef","length","onSubmit","e","preventDefault","console","log","currentTarget","ref","map"],"sourceRoot":""}